body{
    display: flex;
    justify-content: center;
    align-items: center;
}














.parnet {
    display: flex; 


    justify-content: space-evenly;
    align-items: flex-end;

    width: 1000px;
    height: 1000px;

    border: 5px solid red;
}

.child {
    width: 200px;
    height: 200px;
    background-color: rgb(244, 0, 255);
    border: 3px solid rgb(0, 255, 72);
}


/*justify-content მთავარი ღერძი არის განლაგებულნი ელემენტები 
/*flex-direction არის კუტვნილება რემელითაც ვაკანტროლებთ რომელი ღერძი იყოს მთავარი(ანუ რომელ ღერძე იყოს განლაგებული ელემენტები)
/*გვაქვს ორი საბაზისო მნიშვნელობა 
/*row  - რიგი ( x ღერძი )
/*colum - სვეტი ( y ღერძი) 
/*მთავარი ღერძი - არის ის ღერძი როემლზეც არის განლაგებული მთავარი ელემენტები
/*გადამკვეთი ღერძი - არის ის ღერძი რომელიც კვეთს მთავარ ღერძს

  ჩვენ რა თქმა უნდა შეგვიძლია ვაკონტროლოთ ელემენტების კორდინატები მთავარ და გადამკვეთ ღერძებზე
  გვაქვს ორი კუთვნილება 
/*justyfy-content - აკონტროლებს მთავარ ღერძის კუთვნილებებს
/*align-items - აკონტროლებს გადამკვეთუ ღერძის კორდინატებს
/*justyfy-cintent - მნიშვნელობები:
/*flex-start - გადაიტანს მთავარი ღერძის დასაწყისში ყველა ელემენტს
/*flex-end - გადაიტანს მთავარი ღერძის ბოლოში ყველა ელემენტს
/*center - გადაიტანს მთავარი ღერძის ცენტრში ყველა ელემენტს 
/*space-between - გაკეთებს ყველა ელემენტს შორის 
/*space-around - გაკეთებს დაშორებებს ყველა ელემენტსა და განალაგებებს შორის 
/*space-evenly - გაკეთებს ლუწ დაშორებებს ყველა ელემენტებს შორის და კიდებს შორის
/*align-items - მნიშვნელობები: 
  flex-start 
  flex-end 
  center
  aling-center - გასწორება შინარსი 
  display: flex; - ჩვენება: Flex არის CSS თვისება, რომელიც გამოიყენება Flex კონტეინერის დასადგენად. 
                   როდესაც თქვენ იყენებთ ეკრანს: Flex on Element, 
                   ის საშუალებას აძლევს მოქნილი განლაგების სისტემას, რომელიც საშუალებას
                   აძლევს ბავშვის ელემენტებს (ე.წ. flex ნივთებს) უფრო ადვილად განაწილდეს და განაწილდეს კონტეინერში.
















